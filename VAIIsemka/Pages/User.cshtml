@page
@model ClientApp.Pages.UserModel
@{
    ViewData["Title"] = "User page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0 shrink-to-fit=no">
    <title>User Page</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
          rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
</head>
<body style="background: -webkit-linear-gradient(left, #003366, #004080, #0059b3, #0073e6);">


    <div class="modal fade" id="postModal" tabindex="-1" aria-labelledby="postModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="postModalLabel">Post Details</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" style="max-height:150px; width:auto"></button>
                </div>
                <div class="modal-body mt-2">
                    <img id="modalImage" class="img-fluid" alt="Post Image"><br/>
                    <button  id="modalLikes" class="btn btn-primary mt-2"></button>
                    <button id="likeButton" onclick="like()" class="btn btn-primary"></button>
                    <br/>
                    @if (Model.IsMe) {
                         <button id="modalDelete" type="button" onclick="deletePost()" class="btn btn-primary bg-danger">Delete</button>
                    }
                    <p id="modalId" class="visually-hidden"></p>
                    <p id="modalLocation" class="card-text text-muted"></p>
                    <p id="modalCaption" class="card-text font-weight-bold"></p>
                </div>
            </div>
        </div>
    </div>

    <nav class="navbar navbar-expand-md bg-dark">
        <div class="container-xxl">
            <a href="#intro" class="navbar-brand">
                <span class="fw-bold text-white">
                    Spark
                </span>
            </a>
            <!-- toggle button-->
            <button class="navbar-toggler bg-light" type="button" data-bs-toggle="collapse" data-bs-target="#main-nav" aria-controls="main-nav" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <!--navbar links-->
            <div class="collapse navbar-collapse" id="main-nav">
                <ul class="navbar-nav ms-auto align-items-end">
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-page="/About" asp-route-handler="OnGet" asp-route-guid=@Model.Guid>About</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-page="/Home" asp-route-handler="OnGet" asp-route-guid=@Model.Guid>Home</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" asp-page="/User" asp-route-handler="OnGet" asp-route-guid=@Model.Guid>Profile</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link text-white" href="/About">Log out</a>
                    </li>

                </ul>
            </div>
        </div>
    </nav>

    <div class="container mt-4 bg-white rounded p-4">
        <div class="d-flex flex-wrap">
            <!-- Profile Picture -->
            <div class="col-sm-3">
                <img src="/images/profile.png" alt="Profile Picture" class="img-fluid rounded-circle">
            </div>

            <!-- User Info -->
            <div class="col-sm-9">
                <h2 id="username">@Model.User?.Username</h2>
                <h4 id="username">@Model.User?.Name</h4>
                <p class="text-muted">@Model.User?.Bio</p>
                <!-- Post, Followers, Following -->
                <div class="row">
                    <div class="col">
                        <div class="text-center">
                            <h4>Posts</h4>
                            <p>@Model.Posts.Count</p>
                        </div>
                    </div>
                    <div class="col">
                        <div class="text-center">
                            <h4>Followers</h4>
                            <p id="FollowersNumber">@Model.Followers</p>
                        </div>
                    </div>
                    <div class="col">
                        <div class="text-center">
                            <h4>Following</h4>
                            <p id="FollowingNumber">@Model.Followings</p>
                        </div>
                    </div>
                </div>

                <!-- Follow/ Update profile Button -->
                <div class="text-center mt-3">
                    @if (Model.IsMe)
                    {
                        <div class="row">
                            <div class="col text-end">
                                <a class="btn btn-primary" asp-page="/Profile" asp-route-guid=@Model.Guid>Update profile</a>
                            </div>
                            <div class="col text-start">
                                <a class="btn btn-primary" asp-page="/NewPost" asp-route-guid=@Model.Guid>New Post</a>
                            </div>
                            <div class="col text-end">
                                <button class="btn btn-danger" onclick="deleteAccount()">Delete profile</button>
                            </div>

                        </div>
                    } else
                    {
                        <button class="btn btn-primary" id="followButton" onclick="changeFollow()">@Model.Following</button>
                    }
                </div>
            </div>
        </div>
    </div>
    
        <!-- Posts Section -->
        <div class="container mt-4 bg-white rounded p-4">

        @if ((Model.Posts == null || Model.Posts.Count == 0))
        {
            <div class="text-center">
                <h4>User doesn't have any posts yet.</h4>
            </div>
        } 
        else 
        {
            <div class="row row-cols-3">
            @foreach (var post in Model.Posts)
            {
                <div class="col-md-4 col-6">
                        <div class="card mb-4" data-bs-toggle="modal" data-bs-target="#postModal" onclick="displayPost('@Convert.ToBase64String(post.Image1)', '@post.Location' , '@post.Caption','@post.LikeCount', '@post.CommentCount', '@post.Id.ToString()')">
                        <img src="data:image/png;base64,@Convert.ToBase64String(post.Image1)" class="card-img-top" alt="Post Image">
                        <div class="card-body">
                            <h6 class="card-text text-muted">At: @post.Location</h6>
                            <p class="card-text font-weight-bold">@post.Caption</p>
                        </div>
                    </div>
                </div>
            }
            </div>
        }
        </div>
    <script>
        function displayPost(image, location, caption, likes, comments, postId) {
            $('#modalImage').attr('src', 'data:image/png;base64,' + image);
            $('#modalLocation').text('At: ' + location);
            $('#modalCaption').text(caption);
            $('#modalLikes').text('Likes: ' + likes);
            $('#modalId').text(postId);
            var guid = '@Model.Guid';
            $.ajax({
                url: "https://localhost:7271/api/User/IsLiked",
                method: 'GET',
                data: { postId: postId, guid: guid },
                success: function (result) {
                    $('#likeButton').text(result);
                }
            });
            $.ajax({
                url: "https://localhost:7271/api/User/GetLikes",
                method: 'GET',
                data: { postId: postId },
                success: function (result) {
                    $('#modalLikes').text('Likes: ' + result);
                }
            });
            // Show the modal
            $('#postModal').modal('show');
        }

        function deletePost() {
            $(document).ready(function () {
                $('#modalDelete').on('click', function () {
                    // Get the post ID
                    var postId = $('#modalId').text();

                    $.ajax({
                        url: "https://localhost:7271/api/User/DeletePost",
                        method: 'GET',
                        data: { postId: postId },
                        success: function (result) {
                            $('#postModal').modal('hide');
                            location.reload();
                        },
                        error: function () {
                            // Handle error
                            console.error('Failed to delete post.');
                        }
                    });
                });
            });
        }

        function deleteAccount() {
            
            var guid = '@Model.Guid';
            $.ajax({
                url: "https://localhost:7271/api/User/DeleteUser",
                method: 'GET', 
                data: { guid: guid }, 
                success: function (result) {
                    window.location.href = '/About';
                },
                error: function () {
                    // Handle error
                    console.error('Failed to delete account.');
                }
            });
        }

        function like() {
            var postId = $('#modalId').text();
            var guid = '@Model.Guid';
            $.ajax({
                url: "https://localhost:7271/api/User/ChangeLike",
                method: 'GET',
                data: { postId: postId, guid: guid },
                success: function (result) {
                    $('#likeButton').text(result);
                    $.ajax({
                        url: "https://localhost:7271/api/User/GetLikes",
                        method: 'GET',
                        data: { postId: postId },
                        success: function (result) {
                            $('#modalLikes').text('Likes: ' + result);
                        }
                    });
                },
                error: function () {
                    console.error('Failed to like post.');
                }
            });
        }

            function changeFollow() {
                var username = '@Model.User?.Username';
                var guid = '@Model.Guid';
                $.ajax({
                    url: "https://localhost:7271/api/User/ChangeFollow",
                    method: 'GET',
                    data: {guid: guid, username: username },
                    success: function (result) {
                        $('#followButton').text(result);
                        $.ajax({
                            url: "https://localhost:7271/api/User/GetFollowers",
                            method: 'GET',
                            data: { username: username },
                            success: function (result) {
                                $('#FollowersNumber').text(result);
                            }
                        });
                    }
                });
        }

    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

</body>
</html>

