@page
@model VerificationModel
@{
    ViewData["Title"] = "Verification";
}
<!DOCTYPE html>
<html lang="en">
    <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>Verification Page</title>
        <link rel="stylesheet" href="/css/verification.css"/>
    </head>

    <body>
        <h1 class="verification-title">We have sent a mail to ****.</h1>
        <h1 class="verification-title">Please, input verification code</h1>
        <br/>
    <form method="post" asp-page-handler="Verify">
        <div class="verification-container">
            @for (int i = 1; i < 7; i++)
            {
                <!-- input obtained through mail, only numeric, 6digit -->
                <div class="verification-bubble">
                    <input type="number" inputmode="numeric" class="verification-input" name="verification@(i)" id="verification@(i)" min="0" max="9" required />
                </div>
            }
        </div>
            @if (TempData.ContainsKey("Message"))
            {
                <br/>
                <div class="message" style="color: red;">
                    @TempData["Message"]
                </div>
            }
            
        <button type="submit" asp-page-handler="Verify" id="verify-button" class="verify-button">Verify</button>
        <br />
        <button type="submit" asp-page-handler="Resend" id="resend-button" class="resend-button">Resend Mail</button>
        </form>

   

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const inputs = document.querySelectorAll(".verification-input");

            inputs.forEach((input, index) => {
                input.addEventListener("input", (event) => {
                    const value = event.target.value;
                    if (value.length > 1) {
                        event.target.value = value.slice(0, 1);
                    }
                    if (value && index < inputs.length - 1) {
                        inputs[index + 1].focus();
                    }
                });

                // Prevent pasting into the input
                input.addEventListener("paste", (event) => {
                    event.preventDefault();
                });
            });

            // When the last input is filled, enable the verify button
            inputs[inputs.length - 1].addEventListener("input", (event) => {
                const isFilled = inputs.every((input) => input.value.length == 1);
                if (isFilled) {
                    document.getElementById("verify-button").disabled = false;
                }
            });
        });
    </script>
    </body>
</html>

